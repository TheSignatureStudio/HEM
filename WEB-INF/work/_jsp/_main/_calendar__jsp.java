/*
 * JSP generated by Resin-4.0.67 (built Thu, 01 Aug 2024 10:12:42 PDT)
 */

package _jsp._main;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;
import java.text.SimpleDateFormat;
import java.util.Date;

public class _calendar__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html; charset=utf-8");

    

Malgn m = new Malgn(request, response, out);

Form f = new Form();
f.setRequest(request);

Page p = new Page();
p.setRequest(request, response);
p.setWriter(out);

int userId = 0;
String userName = "";
String userType = "";
String userLogin = "";
String userBirthday = "";
boolean isAdult = false;
int sellerStatus = 0;

Auth auth = new Auth(request, response); 
auth.keyName = "AUTHID1867";

// ISO 8601 \ud615\uc2dd \ub0a0\uc9dc \ubcc0\ud658
SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy.MM.dd");

if(auth.isValid()) {
    userId = auth.getInt("id");
	userName = auth.getString("name");
	userLogin = auth.getString("uid");
	userBirthday = auth.getString("birthday");
	p.setVar("login_block", true);
} else {
	p.setVar("login_block", false);
}

    

String ch = "main";


    

String today = m.time("yyyyMMdd");
String todayMonth = today.substring(4);
String todayYear = today.substring(0, 4);
String now = m.time("yyyyMMddHHmmss");
String year = m.rs("year"); if(4 != year.length() || 2000 > m.parseInt(year) || 3000 < m.parseInt(year)) year = m.time("yyyy");
String month = m.strrpad(m.rs("month"), 2, "0"); if(2 != month.length() || 1 > m.parseInt(month) || 12 < m.parseInt(month)) month = m.time("MM");
String thisMonth = year + month;
String prevMonth = m.addDate("M", -1, thisMonth + "01", "yyyyMM");
String nextMonth = m.addDate("M", 1, thisMonth + "01", "yyyyMM");
String day = m.time("dd");

CalendarEventDao eventDao = new CalendarEventDao();
CodeDao code = new CodeDao();

DataSet eventList = eventDao.query("SELECT * FROM " + eventDao.table + " WHERE status = 1");
// \uc5ec\ub7ec \ub0a0\uc5d0 \uac78\uce5c \uc774\ubca4\ud2b8 \ucc3e\uae30
DataSet allDayEvents = new DataSet();
while(eventList.next()) {
    String sday = eventList.s("request_sday");
    String eday = eventList.s("request_eday");
    int isAllDay = eventList.i("is_all_day");
    
    // \uc885\uc77c \uc774\ubca4\ud2b8\uc778 \uacbd\uc6b0
    if(isAllDay == 1) {
        // \uc774\ubca4\ud2b8\ub97c \uc885\uc77c \uc774\ubca4\ud2b8 \ub370\uc774\ud130\uc14b\uc5d0 \uc800\uc7a5
        allDayEvents.addRow();
        allDayEvents.put("request_sday", sday);
        allDayEvents.put("request_eday", eday);
        allDayEvents.put("title", eventList.s("title"));
        allDayEvents.put("color", eventList.s("color"));
        allDayEvents.put("sort", eventList.i("sort"));
    }
}
// sort \uae30\uc900\uc73c\ub85c \uc815\ub82c
allDayEvents.sort("sort", "asc");
eventList.first();

//m.p(eventList);
DataSet dlist = code.getMonthDays(year + month + day, "yyyyMMdd");
DataSet list = new DataSet();

while(dlist.next()) {
	list.addRow();
	list.put("date", dlist.s("date"));
	list.put("type", dlist.s("type"));
	list.put("weekday", dlist.s("weekday"));
	list.put("day", m.time("d", dlist.s("date")));
	list.put("newline", dlist.i("weekday") == 7 ? "</tr><tr>" : "");
	list.put("font", dlist.i("type") == 2 ? "bold" : "normal");
	list.put("year", year);
	list.put("month", month);

	DataSet requestStart = new DataSet();
	
	eventList.first(); // \ud3ec\uc778\ud130\ub97c \ucc98\uc74c\uc73c\ub85c \ub418\ub3cc\ub9bc
	while(eventList.next()) {
		String sday = eventList.s("request_sday");
		String eday = eventList.s("request_eday");
		int isAllDay = eventList.i("is_all_day");
    
		// \uc2dc\uac04 \uc774\ubca4\ud2b8\uc778 \uacbd\uc6b0
		if(isAllDay == 0 && m.time("yyyyMMdd", list.s("date")).equals(sday)) {
			requestStart.addRow();
			requestStart.put("request_sday", sday);
			requestStart.put("request_eday", eday);
			requestStart.put("title", eventList.s("title"));
			requestStart.put("event_idx", eventList.i("__idx"));
			requestStart.put("start_time", eventList.s("start_time"));
			requestStart.put("end_time", eventList.s("end_time"));
		}
	}
	eventList.first(); // \ub2e4\uc74c \uc0ac\uc6a9\uc744 \uc704\ud574 \ud3ec\uc778\ud130\ub97c \ub2e4\uc2dc \ucc98\uc74c\uc73c\ub85c

	list.put(".request_start", requestStart);
	requestStart.first();
	while(requestStart.next()) {
		requestStart.put("start_time", requestStart.s("start_time").substring(0, 2) + ":" + requestStart.s("start_time").substring(2, 4));
		requestStart.put("end_time", requestStart.s("end_time").substring(0, 2) + ":" + requestStart.s("end_time").substring(2, 4));
	}
	
	// \ud574\ub2f9 \ub0a0\uc9dc\uc5d0 \ud3ec\ud568\ub41c \uc885\uc77c \uc774\ubca4\ud2b8 \ucc3e\uae30
	DataSet allDayEventsForDate = new DataSet();
	allDayEvents.first();
	
	while(allDayEvents.next()) {
	    String sday = allDayEvents.s("request_sday");
	    String eday = allDayEvents.s("request_eday");
	    String currentDate = m.time("yyyyMMdd", list.s("date"));
	    
	    // \ud604\uc7ac \ub0a0\uc9dc\uac00 \uc2dc\uc791\uc77c\uacfc \uc885\ub8cc\uc77c \uc0ac\uc774\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778 (\uc2dc\uc791\uc77c\uacfc \uc885\ub8cc\uc77c \ud3ec\ud568)
	    if(m.parseInt(currentDate) >= m.parseInt(sday) && m.parseInt(currentDate) <= m.parseInt(eday)) {
	        allDayEventsForDate.addRow();
	        allDayEventsForDate.put("color", allDayEvents.s("color"));
	        // \uc2a4\ud0c0\uc77c\ub9c1\uc744 \uc704\ud55c \uc704\uce58 \ud45c\uc2dc
	        boolean isFirst = currentDate.equals(sday);
	        boolean isLast = currentDate.equals(eday);
	        
	        // \uc8fc\uc758 \uccab \ub0a0\uc774\uac70\ub098 \uc774\ubca4\ud2b8\uc758 \uc2dc\uc791\uc77c\uc778 \uacbd\uc6b0\uc5d0\ub9cc \uc81c\ubaa9 \ud45c\uc2dc
	        boolean isWeekStart = m.parseInt(m.time("u", currentDate)) == 7; // \uc77c\uc694\uc77c\uc778 \uacbd\uc6b0
	        boolean showTitle = isFirst || isWeekStart;
	        
	        if(isFirst && isLast) {
	            allDayEventsForDate.put("position_type", "single");  // \ud558\ub8e8\uc9dc\ub9ac \uc774\ubca4\ud2b8
	            allDayEventsForDate.put("title", allDayEvents.s("title"));
	        } else if(isFirst) {
	            allDayEventsForDate.put("position_type", "first");   // \uc5ec\ub7ec \ub0a0 \uc774\ubca4\ud2b8\uc758 \uccab\uc9f8\ub0a0
	            allDayEventsForDate.put("title", allDayEvents.s("title"));
	        } else if(isLast) {
	            allDayEventsForDate.put("position_type", "last");    // \uc5ec\ub7ec \ub0a0 \uc774\ubca4\ud2b8\uc758 \ub9c8\uc9c0\ub9c9\ub0a0
	            allDayEventsForDate.put("title", showTitle ? allDayEvents.s("title") : "");
	        } else {
	            allDayEventsForDate.put("position_type", "middle");  // \uc5ec\ub7ec \ub0a0 \uc774\ubca4\ud2b8\uc758 \uc911\uac04\ub0a0
	            allDayEventsForDate.put("title", showTitle ? allDayEvents.s("title") : "");
	        }
	    }
	}
	list.put(".all_day_events", allDayEventsForDate);

    String tdClass = "";
    if(!"2".equals(dlist.s("type"))) tdClass += "other-month ";
    if(dlist.s("date").equals(today)) tdClass += "today ";
    list.put("td_class", tdClass.trim());
}

//\ucd9c\ub825
p.setLayout(ch);
p.setBody("main.calendar");
p.setVar("form_script", f.getScript());

p.setLoop("dlist", dlist);
p.setLoop("list", list);
p.setVar("prev_year", prevMonth.substring(0, 4));
p.setVar("next_year", nextMonth.substring(0, 4));
p.setVar("prev_month", prevMonth.substring(4));
p.setVar("next_month", nextMonth.substring(4));

p.setVar("year", year);
p.setVar("month", month);

p.setVar("today_year", todayYear);
p.setVar("today_month", todayMonth);
p.display();


  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 5413665724253103304L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("main/calendar.jsp"), 8027587027127311030L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("main/init.jsp"), -5623034899004674451L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("init.jsp"), 8583015042390199441L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }
}
